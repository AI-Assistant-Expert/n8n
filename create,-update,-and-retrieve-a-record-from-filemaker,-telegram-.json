{
  "createdAt": "2025-06-11T18:55:58.892Z",
  "updatedAt": "2025-08-17T19:38:28.000Z",
  "id": "J9zTwlo7k7LLUFBZ",
  "name": "Create, update, and retrieve a record from FileMaker, Telegram",
  "active": true,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=User Input:  {{ $json?.chatInput || $json?.message?.text || $json?.query?.request }}.\n\nCurrent time: {{ $now.toLocal().toString() }}\n  ",
        "options": {
          "systemMessage": "You are a helpful assistant. Look at the user query and you need to find answers to that from the buffer or tools available with you. \n\nYou will trigger FileMaker tool to find the user data if it doesn't exist in the buffer/memory.\n\nYour reply to any query has to be precise of what asked and don't need to ask users for more questions.\n\nIf the user asks information about patients details first grab the first and last name if provided and then query the find patient tool. That will give you details about the patient.",
          "returnIntermediateSteps": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.7,
      "position": [
        -780,
        140
      ],
      "id": "e89ac6b6-d843-4657-b957-ec074de37a04",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        -1160,
        140
      ],
      "id": "290d4218-f8a2-4e08-a29d-c1b73b625ad1",
      "name": "When chat message received",
      "webhookId": "aab83bdd-6f44-4324-a557-0fb50a8b4f4e"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -860,
        380
      ],
      "id": "c11e4457-51ad-4735-a91d-21e6487e74a4",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "Z9tGwUwFTMTG2mbT",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        -1160,
        -60
      ],
      "id": "f8162a23-29f3-461b-9027-ccea4ce72c28",
      "name": "Telegram Trigger",
      "webhookId": "34894733-ad4a-428b-b981-c643de5dbc8a",
      "credentials": {
        "telegramApi": {
          "id": "LJQSOYOeJo6jWSao",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -20,
        180
      ],
      "id": "9ed0a540-065a-4e7f-a5a6-eab49dddb597",
      "name": "Telegram",
      "webhookId": "646d4a6d-c508-4686-b629-4f166f9eccfa",
      "credentials": {
        "telegramApi": {
          "id": "LJQSOYOeJo6jWSao",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.message?.chat.id || \"test\" }}",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -680,
        380
      ],
      "id": "eaabbc76-8191-47ce-a66a-cf592464682c",
      "name": "Window Buffer Memory"
    },
    {
      "parameters": {
        "path": "7ac79dc1-e636-42d7-8c3f-91a1f254c31a",
        "responseMode": "responseNode",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -1160,
        380
      ],
      "id": "5859d034-d79c-495f-b64a-933de41ad9fc",
      "name": "Webhook",
      "webhookId": "7ac79dc1-e636-42d7-8c3f-91a1f254c31a"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1.1,
      "position": [
        0,
        0
      ],
      "id": "ab670950-caa3-43f4-a468-4b62f5fe15ed",
      "name": "Respond to Webhook"
    },
    {
      "parameters": {
        "toolDescription": "Create appointment using the date time and booking details. First find the patient details for which the appointment needs to be created",
        "action": "create",
        "layout": "Appointments",
        "fieldsParametersUi": {
          "fields": [
            {
              "name": "TimeBegin",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fields0_Value', `this is the start of the appointment time HH:mm`, 'string') }}"
            },
            {
              "name": "TimeEnd",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fields1_Value', `This will be +60 minutes from the TimeBegin variable`, 'string') }}"
            },
            {
              "name": "ApptDate",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fields2_Value', `this is a date format using MM/DD/YYYY`, 'string') }}"
            },
            {
              "name": "IDReferral",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fields3_Value', `this is the patient ID that you can fetch from the Fetch Patient tool`, 'string') }}"
            },
            {
              "name": "Type",
              "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fields4_Value', `this is appointment type which you can fetch from the Fetch appointment type tool and input the Type field after matching the name from the user.`, 'string') }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.filemakerTool",
      "typeVersion": 1,
      "position": [
        -140,
        420
      ],
      "id": "2e835631-8be2-4e56-a04d-f06267db67dd",
      "name": "Create Appointment",
      "credentials": {
        "fileMaker": {
          "id": "olW7Z34cJ8ZnzTko",
          "name": "FileMaker account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "9cb7b61d-c3b7-451f-bd9e-5d0cc3f37ec4",
              "leftValue": "={{ $('Webhook').isExecuted }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        -340,
        100
      ],
      "id": "68884456-2d1a-429c-bffa-58d70429a107",
      "name": "If"
    },
    {
      "parameters": {
        "toolDescription": "Retrieve data from the FileMaker data API. Fetch the patient data including their appointment.",
        "action": "find",
        "layout": "Patient Input",
        "getPortals": true,
        "portals": [
          "Appointments",
          []
        ],
        "responseLayout": "Patient Input",
        "queries": {
          "query": [
            {
              "fields": {
                "field": [
                  {
                    "name": "FullName",
                    "value": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Value', ``, 'string') }}"
                  }
                ]
              }
            }
          ]
        }
      },
      "type": "n8n-nodes-base.filemakerTool",
      "typeVersion": 1,
      "position": [
        40,
        420
      ],
      "id": "5c8af2e8-740c-4e2a-9c3e-fea22cd4a27f",
      "name": "Fetch Patient Data",
      "credentials": {
        "fileMaker": {
          "id": "olW7Z34cJ8ZnzTko",
          "name": "FileMaker account"
        }
      }
    },
    {
      "parameters": {
        "toolDescription": "Retrieve data about appointment types. You need to use the fields recordId, Duration, appt_type_ID and Type to be fed to the agent. Please exclude the data from DBK_WebViewerData field to be passed anywhere",
        "action": "records",
        "layout": "AppointmentTypes"
      },
      "type": "n8n-nodes-base.filemakerTool",
      "typeVersion": 1,
      "position": [
        -340,
        420
      ],
      "id": "c50a2c3a-45c7-4071-a290-a1ad062e6772",
      "name": "Fetch Appointment Type",
      "credentials": {
        "fileMaker": {
          "id": "olW7Z34cJ8ZnzTko",
          "name": "FileMaker account"
        }
      }
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Window Buffer Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create Appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Patient Data": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Fetch Appointment Type": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "4c1a9205-5dc4-4ddc-82d9-8233bd9a082d",
  "triggerCount": 3,
  "tags": []
}